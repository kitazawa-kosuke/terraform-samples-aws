name: terraform
on:
  push:
    branches:
      - main
      - feature/*
    paths:
      - "**"
  workflow_dispatch:

permissions: 
  contents: read
  checks: write

env:
  TF_VERSION: 1.5.4
  TFLINT_VERSION: 0.50.3
  ARM_CLIENT_ID: "${{ secrets.ARM_CLIENT_ID }}"
  ARM_SUBSCRIPTION_ID: "${{ secrets.ARM_SUBSCRIPTION_ID }}"
  ARM_TENANT_ID: "${{ secrets.ARM_TENANT_ID }}"
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}

jobs:
  changed_path_filter: 
    runs-on: ubuntu-latest
    outputs:
      projects: ${{ steps.changed_path_filter.outputs.changes }}
    steps:
      - name: Clone repo
        uses: actions/checkout@master
      
      - uses: dorny/paths-filter@v3
        id: changed_path_filter
        with:
          filters: |
            sample_appservice:
              - sample_appservice/**
            sample_storageaccount:
              - sample_storageaccount/**

  debug-pathfilter-output:
    runs-on: ubuntu-latest
    needs: changed_path_filter
    steps:
      - run: echo ${{ needs.changed_path_filter.outputs.projects }}

  code_analysis:
    runs-on: ubuntu-latest
    needs: changed_path_filter
    if: needs.changed_path_filter.outputs.projects != '[]'
    strategy:
      matrix:
        workdir: ${{ fromJSON(needs.changed_path_filter.outputs.projects) }}
    steps:
      - name: Clone repo
        uses: actions/checkout@master

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      # Terraform fmt(フォーマット)
      - name: terraform fmt
        run: terraform fmt -check
        working-directory: ${{ matrix.workdir }}

      # Terraform validate(構文チェック)
      - name: terraform init
        run: terraform init
        working-directory: ${{ matrix.workdir }}

      - name: Terraform validate
        id: validate
        run: terraform validate
        working-directory: ${{ matrix.workdir }}

      # コードの静的解析（Trivy）
      - name: Trivy scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "config"
          severity: "HIGH, CRITICAL"
          format: "template"
          template: "@/contrib/junit.tpl"
          output: "junit-report.xml"
          exit-code: "0"
          scan-ref: ${{ matrix.workdir }}

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: success() || failure() # always run even if the previous step fails
        with:
          summary: Trivy Check Report
          report_paths: "**/junit-report.xml"

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: v${{ env.TFLINT_VERSION }}

      - name: Init TFLint
        run: tflint --init -c $GITHUB_WORKSPACE/.devcontainer/tflint/.tflint.hcl
        env:
          # https://github.com/terraform-linters/tflint/blob/master/docs/user-guide/plugins.md#avoiding-rate-limiting
          GITHUB_TOKEN: ${{ github.token }}

      - name: Run TFLint
        run: tflint -f compact
        working-directory: ${{ matrix.workdir }}

